{"version":3,"sources":["TodoItem.js","App.js","index.js"],"names":["TodoItemWrapper","styled","div","TodoContent","TodoButtonWrapper","BlueButton","button","RedButton","TodoItem","todo","handleToggleTodo","handleDeleteTodo","data-todo-id","id","content","onClick","isDone","Container","Title","h1","Todo","Buttons","Button","ClearButton","FILTER_MAP","All","Active","Completed","FILTER_NAMES","Object","keys","App","useRef","useState","todoData","window","localStorage","getItem","JSON","parse","current","todos","setTodos","value","setValue","filter","setFilter","FilterButton","props","aria-pressed","isPressed","name","filterList","map","useLayoutEffect","useEffect","setItem","stringify","writeTodosToLocalStorage","console","log","handleButtonClick","useCallback","alert","type","placeholder","onChange","e","target","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.59d50449.chunk.js","sourcesContent":["import styled from \"styled-components\";\n\nconst TodoItemWrapper = styled.div`\n  width: 600px;\n  margin: 0 auto;\n  margin-top: 20px;\n  border-radius: 3px;\n  border: 1px solid rgba(54, 84, 7, 0.5);\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\nconst TodoContent = styled.div`\n  margin: 5px;\n`;\n\nconst TodoButtonWrapper = styled.div`\n  display: flex;\n`;\n\nconst BlueButton = styled.button`\n  &:hover {\n    color: #ffffff;\n    background: green;\n    border: 1px solid transparent;\n    border-radius: 3px;\n  }\n  margin: 0 3px;\n  cursor: pointer;\n`;\n\nconst RedButton = styled.button`\n  &:hover {\n    color: #ffffff;\n    background: red;\n    border: 1px solid transparent;\n    border-radius: 3px;\n  }\n  margin: 0 3px;\n  cursor: pointer;\n`;\n\nexport default function TodoItem({ todo, handleToggleTodo, handleDeleteTodo }) {\n  const handleToggleClick = () => {\n    handleToggleTodo(todo.id);\n  };\n  const handleDeleteClick = () => {\n    handleDeleteTodo(todo.id);\n  };\n\n  return (\n    <TodoItemWrapper data-todo-id={todo.id}>\n      <TodoContent>{todo.content}</TodoContent>\n      <TodoButtonWrapper>\n        <BlueButton onClick={handleToggleClick}>\n          {todo.isDone ? \"未完成\" : \"已完成\"}\n        </BlueButton>\n        <RedButton onClick={handleDeleteClick}>刪除</RedButton>\n      </TodoButtonWrapper>\n    </TodoItemWrapper>\n  );\n}\n","import {\n  useState,\n  useEffect,\n  useRef,\n  useLayoutEffect,\n  useCallback,\n} from \"react\";\nimport TodoItem from \"./TodoItem\";\nimport styled from \"styled-components\";\n\nfunction writeTodosToLocalStorage(todos) {\n  window.localStorage.setItem(\"todos\", JSON.stringify(todos));\n}\n\nconst Container = styled.div``;\n\nconst Title = styled.h1`\n  text-align: center;\n`;\n\nconst Todo = styled.div`\n  text-align: center;\n`;\n\nconst Buttons = styled.div`\n  display: flex;\n  justify-content: center;\n  margin-top: 20px;\n`;\nconst Button = styled.button`\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  background: #ffffff;\n  border-radius: 3px;\n  border: 1px solid #84828254;\n\n  & + & {\n    margin-left: 4px;\n  }\n  &:hover {\n    border: 2px solid blue;\n  }\n`;\n\nconst ClearButton = styled.button`\n  width: 80px;\n  height: 30px;\n  cursor: pointer;\n  background: #ffffff;\n  border-radius: 3px;\n  border: 1px solid #84828254;\n  margin-left: 4px;\n  &:hover {\n    border: 2px solid red;\n  }\n`;\n\n// 放在外面是為了避免重複計算，定義 filter\nconst FILTER_MAP = {\n  All: () => true,\n  Active: (todo) => !todo.isDone,\n  Completed: (todo) => todo.isDone,\n};\n// 將 FILTER_MAP 的 keys 收集成陣列\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\n\nexport default function App() {\n  const id = useRef(1);\n  const [todos, setTodos] = useState(() => {\n    let todoData = window.localStorage.getItem(\"todos\") || \"\";\n    if (todoData && todoData !== \"[]\") {\n      todoData = JSON.parse(todoData);\n      id.current = todoData[0].id + 1;\n    } else {\n      todoData = [];\n    }\n    return todoData;\n  });\n  const [value, setValue] = useState(\"\");\n  const [filter, setFilter] = useState(\"All\");\n\n  const FilterButton = (props) => {\n    return (\n      <Button\n        aria-pressed={props.isPressed}\n        onClick={() => props.setFilter(props.name)}\n      >\n        <span>{props.name}</span>\n      </Button>\n    );\n  };\n\n  const filterList = FILTER_NAMES.map((name) => (\n    <FilterButton\n      key={name}\n      name={name}\n      isPressed={name === filter}\n      setFilter={setFilter}\n    />\n  ));\n\n  useLayoutEffect(() => {\n    const todoData = window.localStorage.getItem(\"todos\") || \"\";\n    if (todoData) {\n      setTodos(JSON.parse(todoData));\n    }\n  }, []);\n\n  useEffect(() => {\n    writeTodosToLocalStorage(todos);\n    console.log(\"useEffect: todos\", JSON.stringify(todos));\n  }, [todos]);\n\n  const handleInputChange = (e) => {\n    setValue(e.target.value);\n  };\n\n  const handleButtonClick = useCallback(() => {\n    if (value === \"\") {\n      alert(\"不可空白\");\n      return;\n    }\n    setTodos([\n      {\n        id: id.current,\n        content: value,\n        isDone: false,\n      },\n      ...todos,\n    ]);\n    setValue(\"\");\n    id.current++;\n  }, [setValue, setTodos, value, todos]);\n\n  const handleToggleTodo = (id) => {\n    setTodos(\n      todos.map((todo) => {\n        if (todo.id !== id) return todo;\n        return {\n          ...todo,\n          isDone: !todo.isDone,\n        };\n      })\n    );\n  };\n\n  const handleDeleteTodo = (id) => {\n    setTodos(todos.filter((todo) => todo.id !== id));\n  };\n\n  const handleClearClick = () => {\n    setTodos([]);\n  };\n  return (\n    <Container>\n      <Title>我的第一個 ToDoList</Title>\n      <Todo>\n        <input\n          type=\"text\"\n          placeholder=\"請輸入待辦事項\"\n          onChange={handleInputChange}\n          value={value}\n        />\n        <button onClick={handleButtonClick}>送出</button>\n      </Todo>\n\n      <Buttons>\n        {filterList}\n        <ClearButton onClick={handleClearClick}>ClearAll</ClearButton>\n      </Buttons>\n      {todos.filter(FILTER_MAP[filter]).map((todo) => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          handleToggleTodo={handleToggleTodo}\n          handleDeleteTodo={handleDeleteTodo}\n        />\n      ))}\n    </Container>\n  );\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(\n  <App />,\n\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}